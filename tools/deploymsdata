#!/bin/bash

DefaultHostFile="./hostlist.ini"
DefaultRemoteDir="/var/opt/mssql/data"

function _readIniSection() {
    IniFile=$1
    Section=`awk -F '\\\[|\\\]' '{if($0!~/^\#/&&$0~/\[*.\]/) print $2}' $IniFile`
    echo ${Section}
}

function _readIniItem() {
    IniFile=$1; Section=$2; Item=$3
    ItemValue=`awk -F '=' '{
        if($0!~/\#/&&$0!~/^$/){
            if($0~/\['$Section'\]/){
                a=1;
                next;
            }
            if(a==1&&$0~/^[\[]/){
                exit;
            }
            if(a==1&&$1~/'$Item'/){
                print $2;
            }
        }
    }' $IniFile`
    echo ${ItemValue}
}



while getopts ":fdU:P:H:R:h" opt
do
    case $opt in
		f)
			if [ -z $TargetType ]
            then
                TargetType=$opt
            else
                echo "Option TargetType [$TargetType] has been set!"
                exit 1
            fi  
            ;;
		d)
			if [ -z $TargetType ]
            then
                TargetType=$opt
            else
                echo "Option TargetType [$TargetType] has been set!"
                exit 1
            fi  
            ;;
		U)
			RemoteUser=$OPTARG
			;;
		P)
			RemotePasswd=$OPTARG
			;;
        H)
			HostFile=$OPTARG	
            ;;
        R)
			RemoteDir=$OPTARG
            ;;
        h)
            printf "%s\n" "Useage: [-f|d] [-U Remote user] [-P Remote password] [-H hostfile] [-R remotedir] file1 fil2 ..."
            printf "  %3s %-20s %s\n" "-U," "--Remote user" "Remote user"
            printf "  %3s %-20s %s\n" "-P," "--Remote password" "Remote password"
            printf "  %3s %-20s %s\n" "-H," "--hostfile" "The test machine list file"
            printf "  %3s %-20s %s\n" "-R," "--remote directory" "Remote host directory"
            printf "  %3s %-20s\n" "-h," "--help"
            exit 0
            ;;
        :)
            echo "No argument value for option [$OPTARG]"
            exit 1
            ;;
        ?)
            echo "Unknow option [$OPTARG]!"
            exit 1
    esac
done

shift $(($OPTIND-1))

for args in $*
do
    if [[ ${args:0:1} = '-' ]]
    then
        echo "Unknow option format at [$args]!"
		exit 9
    fi
done

if [ $# -lt 1 ]
then
	echo "No upload data file specified."
	exit 9
fi

if [ -z $TargetType ]
then
	TargetType='f'
fi

if [ -z $HostFile ]
then
	HostFile=$DefaultHostFile
fi

if [ -z $RemoteDir ]
then
	RemoteDir=$DefaultRemoteDir
fi

if [ -z $RemoteUser ]
then
	RemoteUser="mssql"
fi

if [ -z $RemotePasswd ]
then
	RemotePasswd="mssql"
fi

for _Host in $(_readIniSection $HostFile)
do
	for args in $*
	do
		if [[ $TargetType = 'f' ]]
		then
			if [ ! -f $args ]
			then 
				echo "File[$args] does not exist."
				exit 9
			fi
		elif [[ $TargetType = 'd' ]]
		then
			if [ ! -d $args ]
			then
				echo "Directory[$args] does not exist."
				exit 9
			fi
		else
			echo "Unknow Options[$TargetType]."
			exit 9
		fi
	done
	for args in $*
	do
		if [[ $TargetType = 'f' ]]
		then
			Commond="scp -o StrictHostKeyChecking=no "$args" $RemoteUser@"$_Host":"$RemoteDir
			if [[ $? != 0 ]]
			then
				echo "Host[$_Host] upload file[$args] failed."
				exit 9
			fi
		elif [[ $TargetType = 'd' ]]
		then
			Commond="scp -r -o StrictHostKeyChecking=no "$args" $RemoteUser@"$_Host":"$RemoteDir
			if [[ $? != 0 ]]
			then
				echo "Host[$_Host] upload directory[$args] failed."
				exit 9
			fi
		else
			echo "Unknow Options[$TargetType]."
			exit 9
		fi
		expect -c "
			spawn $Commond
			set timeout -1
			expect {
				\"password\" { send \"$RemotePasswd\r\" }
			}
			set timeout 2
			expect {
				\"password\" {
								send_user \"Wrong password\"
								exit 9
							 }
				\"timeout\" {}
				\"eof\" {}
			}
			expect {
				\"eof\" { }
			}
		"
	done
done
