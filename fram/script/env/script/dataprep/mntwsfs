#!/bin/bash


SYSVER="Ubuntu"

ChkFlg=

if [ `id -u` -ne 0 ]
then
	echo "Permission denied"
	exit 9
fi

if [[ $SYSVER == "Ubuntu" ]]
then
    Debinfo=`dpkg-query -l cifs-utils|grep "cifs-utils"|grep -v grep`
    if [ $? -ne 0 ] 
    then
        ChkFlg=1
    else
        _Status=`echo $Debinfo|awk '{print $1}'`
        if [[ $_Status == "ii" ]]
        then
            ChkFlg=0
        else
            ChkFlg=1
        fi  
    fi  
elif [[ $SYSVER == "Red Hat" ]]
then
    echo "Red Hat Not support!"
    exit 9
else
    echo "Unknow Linux Issue [$1]"
    exit 9
fi

if [[ $ChkFlg == 1 ]]
then
	echo "Begin install cifs package!"
	apt-get install -y  cifs-utils
	if [ $? -ne 0 ]
	then
		echo "Install cifs error!"
		exit 9
	fi
fi

_User=
_Group=
_RUser=
_RPassword=

while getopts ":hu:g:U:P:" opt
do
    case $opt in
        u)  
			_User=$OPTARG
            ;;  
        g)  
			_Group=$OPTARG
            ;;  
        U)  
			_RUser=$OPTARG
            ;;  
        P)  
			_RPassword=$OPTARG
            ;;  
        h)  
            printf "%s\n" "Useage: [-u user] [-g group] [-U Remote user] [-P Remote password] [Remote folder] [Local folder]"
            printf "  %-3s %s\n" "-u" "The user of the local mount point"
            printf "  %-3s %s\n" "-g" "The user group of the local mount point"
            printf "  %-3s %s\n" "-U" "Windows shared folder user"
            printf "  %-3s %s\n" "-P" "Windows shared folder user's password"
            printf "  %-3s %s\n" "-h" "help"
            exit 0
            ;;
        :)
            echo "No argument value for option [$OPTARG]"
            exit 1
            ;;
        ?)
            echo "Unknow option [$OPTARG]!"
            exit 1
    esac
done

shift $(($OPTIND-1))

for args in $*
do
    if [[ ${args:0:1} = '-' ]]
    then 
        echo "Unknow option format at [$args]!"
        exit 9
    fi  
done

if [ $# -ne 2 ]
then
	echo "Arguments error."
	exit 9
fi

if [ ! -d $2 ]
then
	echo "Local folder not exist."
	exit 9
fi

_Commond="mount -t cifs"

if [ -z "$_User" ] && [ -z "$_Group" ] && [ -z "$_RUser" ] && [ -z "$_RPassword" ]
then 
	_Commond=${_Commond}" "$1" "$2
else
	_Commond=${_Commond}" -o vers=2.0,"
	if [ -n "$_User" ]
	then
		_Commond=${_Commond}" uid="${_User}","
	fi
	if [ -n "$_Group" ]
	then
		_Commond=${_Commond}" gid="${_Group}","
	fi
	if [ -n "$_RUser" ]
	then
		_Commond=${_Commond}" username="${_RUser}","
	fi
	if [ -n "$_RPassword" ]
	then
		_Commond=${_Commond}" password="${_RPassword}","
	fi
fi

_Commond=${_Commond//, /,}
_Commond=${_Commond%,}" "$1" "$2

`$_Commond`

if [ $? -ne 0 ]
then
	echo "Mount error CMD[$_Commond]."
	exit 9
fi

